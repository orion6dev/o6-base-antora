name: CD - Antora base image

on:
  schedule:
    - cron: '0 0 * * 1'
  push:
    branches:
      - develop

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v3
      with:
        versionSpec: '5.x'

    - name: Determine Version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0
      with:
        useConfigFile: true
        configFilePath: GitVersion.yml

    - name: Build and Push Docker image
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "$GITHUB_TOKEN" | docker login ghcr.io --username automation@orion6dev.com --password-stdin

        # Create and use a new buildx builder instance which will
        # be automatically used for subsequent buildx commands.
        docker buildx create --use

        # Prepare tags
        SEMVER_TAG="ghcr.io/orion6dev/${{ github.event.repository.name }}:${{ steps.gitversion.outputs.semVer }}"
        DEV_TAG="ghcr.io/orion6dev/${{ github.event.repository.name }}:dev"
        TAGS="$SEMVER_TAG"
        if [[ "${GITHUB_REF##*/}" == "develop" ]]; then
          TAGS="$TAGS -t $DEV_TAG"
        fi

        # Starting a build using docker buildx, ensuring the context is clearly provided
        docker buildx build . \
          --platform linux/amd64 \
          --build-arg RELEASE_TAG=$PreReleaseTag \
          --label org.opencontainers.image.created=$(date --iso-8601=seconds) \
          --label org.opencontainers.image.title="Antora Base Image" \
          --label org.opencontainers.image.description="Base Docker image for Antora" \
          --label org.opencontainers.image.url="https://github.com/orion6dev/${{ github.event.repository.name }}" \
          --label org.opencontainers.image.source="https://github.com/orion6dev/${{ github.event.repository.name }}" \
          --label org.opencontainers.image.version="${{ steps.gitversion.outputs.semVer }}" \
          --label org.opencontainers.image.revision="${{ github.sha }}" \
          --label org.opencontainers.image.vendor="orion6dev" \
          --label org.opencontainers.image.licenses="MIT" \
          --label org.opencontainers.image.version.informational="${{ steps.gitversion.outputs.informationalVersion }}" \
          -t $TAGS \
          --output type=image,push=true \
          --file Dockerfile
    
